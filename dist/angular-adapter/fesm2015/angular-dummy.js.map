{"version":3,"file":"angular-dummy.js","sources":["../../../projects/angular-adapter/src/lib/csvbox-button.component.ts","../../../projects/angular-adapter/src/lib/csvbox-angular.module.ts","../../../projects/angular-adapter/src/public-api.ts","../../../projects/angular-adapter/src/angular-dummy.ts"],"sourcesContent":["import { Component, OnInit, ViewChild, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'csvbox-button',\n  template: `\n    <div>\n      <button disabled (click)=\"openModal()\" data-csvbox-initator [attr.data-csvbox-token]=\"uuid\">\n        <ng-content></ng-content>\n      </button>\n      <div #holder class=\"holder\" attr.id=\"csvbox-embed-{{ uuid }}\">\n        <iframe #iframe class=\"iframe\" [src]=\"safeUrl\" [attr.data-csvbox-token]=\"uuid\"></iframe>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .holder{\n        z-index: 2147483647;\n        position: fixed;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        display: none;\n      }\n      .iframe{\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        top: 0px;\n        left: 0px;\n      }\n    `\n  ]\n})\n\nexport class CSVBoxButtonComponent implements OnInit, OnChanges {\n\n  isModalShown = false;\n\n  @ViewChild('holder') holder: any;\n  @ViewChild('iframe') iframe: any;\n  @Input() onImport: Function;\n  @Input() onReady: Function;\n  @Input() onClose: Function;\n  @Input() onSubmit: Function;\n\n  @Input() user: Object;\n  @Input() dynamicColumns: Object;\n  @Input() licenseKey: String;\n  @Input() options: Object;\n  @Input() uuid: String = null;\n  @Input() debugMode: boolean;\n  @Input() useStagingServer: boolean;\n\n  safeUrl:SafeUrl;\n\n  constructor(public sanitizer:DomSanitizer) {}\n\n  ngOnInit(): void {\n    this.uuid = this.generateUuid();\n    if(this.debugMode) {\n      console.log(`[Csvbox-${this.uuid}]`,\"UUID:\");\n      console.log(`[Csvbox-${this.uuid}]`,\"License key:\", this.licenseKey);\n      console.log(`[Csvbox-${this.uuid}]`,`Using ${this.useStagingServer ? 'staging' : 'live'} server` );\n    }\n    let url = `https://${this.useStagingServer ? 'staging' : 'app' }.csvbox.io/embed/${this.licenseKey}`;\n\n    url += \"?library-version=2\";\n\n    this.safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n  generateUuid(): string {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if(changes[\"user\"] && changes['user'].currentValue != changes['user'].previousValue) {\n      this.updateUserVariabe(changes['user'].currentValue);\n    }\n  }\n\n  updateUserVariabe(data): void {\n    this.user = data;\n    this.iframe?.nativeElement?.contentWindow?.postMessage({\n      \"customer\" : data\n    }, \"*\");\n  }\n\n  ngAfterViewInit(): void {\n    window.addEventListener(\"message\", (event) => {\n\n      if(this.debugMode) { console.log(`[Csvbox-${this.uuid}]`, \"Message:\", event); }\n\n      if (event?.data === \"mainModalHidden\") {\n        this.holder.nativeElement.style.display = 'none';\n        this.isModalShown = false;\n        this.onClose?.();\n      }\n      if(event?.data === \"uploadSuccessful\") {\n        this.onImport(true);\n      }\n      if(event?.data === \"uploadFailed\") {\n        this.onImport(false);\n      }\n      if(typeof event?.data == \"object\") {\n        if(event?.data?.data?.unique_token == this.uuid) {\n          if(event.data.type && event.data.type == \"data-on-submit\") {\n            let metadata = event.data.data;\n            metadata[\"column_mappings\"] = event.data.column_mapping;\n            // this.callback(true, metadata);\n            delete metadata[\"unique_token\"];\n            this.onSubmit?.(metadata);\n        }\n        else if(event.data.type && event.data.type == \"data-push-status\") {\n            if(event.data.data.import_status == \"success\") {\n                // this.callback(true, event.data.data);\n                if(event?.data?.row_data) {\n                    let primary_row_data = event.data.row_data;\n                    let headers = event.data.headers;\n                    let rows = [];\n                    let dynamic_columns_indexes = event.data.dynamicColumnsIndexes;\n                    primary_row_data.forEach((row_data) => {\n                        let x = {};\n                        let dynamic_columns = {};\n                        row_data.data.forEach((col, i)=>{\n\n                            if(col == undefined){ col = \"\"};\n\n                            if(dynamic_columns_indexes.includes(i)) {\n                                dynamic_columns[headers[i]] = col;\n                            }else{\n                                x[headers[i]] = col;\n                            }\n                        });\n                        if(row_data?.unmapped_data) {\n                            x[\"_unmapped_data\"] = row_data.unmapped_data;\n                        }\n                        if(dynamic_columns && Object.keys(dynamic_columns).length > 0) {\n                            x[\"_dynamic_data\"] = dynamic_columns;\n                        }\n                        rows.push(x);\n                    });\n                    let metadata = event.data.data;\n                    metadata[\"rows\"] = rows;\n                    delete metadata[\"unique_token\"];\n                    this.onImport(true, metadata);\n                }else{\n                    let metadata = event.data.data;\n                    delete metadata[\"unique_token\"];\n                    this.onImport(true, metadata);\n                }\n            }else {\n                let metadata = event.data.data;\n                delete metadata[\"unique_token\"];\n                this.onImport(false, metadata);\n            }\n        }\n\n\n        }\n      }\n    }, false);\n\n    let iframe = this.iframe.nativeElement;\n    // let user = this.user;\n    // let dynamicColumns = this.dynamicColumns;\n    // let options = this.options;\n    // let uuid = this.uuid;\n\n    let self = this;\n\n    iframe.onload = function () {\n\n      if(self.debugMode) { console.log(`[Csvbox-${self.uuid}]`,\"iframe loaded\"); }\n\n      self.onReady?.();\n\n      self.enableInitator();\n\n      iframe.contentWindow.postMessage({\n        \"customer\" : self.user ? self.user : null,\n        \"columns\" : self.dynamicColumns ? self.dynamicColumns : null,\n        \"options\" : self.options ? self.options : null,\n        \"unique_token\": self.uuid\n      }, \"*\");\n\n    }\n  }\n  enableInitator(){\n    let initator = document.querySelector(`[data-csvbox-initator][data-csvbox-token=\"${this.uuid}\"]`) as HTMLButtonElement;\n    if(initator && initator.disabled !== undefined) {\n      initator.disabled = false;\n    }\n  }\n  openModal(): void {\n    if(!this.isModalShown) {\n      this.isModalShown = true;\n      this.iframe.nativeElement.contentWindow.postMessage('openModal', '*');\n      this.holder.nativeElement.style.display = 'block';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CSVBoxButtonComponent } from './csvbox-button.component';\n\n\n\n@NgModule({\n  declarations: [\n    CSVBoxButtonComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    CSVBoxButtonComponent\n  ]\n})\nexport class CSVBoxAngularModule { }\n","/*\n * Public API Surface of angular-adapter\n */\n\n// export * from './lib/angular-adapter.service';\nexport * from './lib/csvbox-button.component';\nexport * from './lib/csvbox-angular.module';\nexport * from './lib/interfaces/interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}